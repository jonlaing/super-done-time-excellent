// Generated by BUCKLESCRIPT VERSION 1.8.2, PLEASE EDIT WITH CARE
'use strict';

var Task        = require("./task.js");
var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var Utils       = require("./utils.js");
var StyleRe     = require("bs-react-native/lib/js/src/styleRe.js");
var TaskList    = require("./taskList.js");
var TaskView    = require("./taskView.js");
var BubbleEvent = require("./bubbleEvent.js");
var ReactNative = require("bs-react-native/lib/js/src/reactNative.js");
var ReasonReact = require("reason-react/lib/js/src/reasonReact.js");

var component = ReasonReact.statefulComponent("AppRe");

function make() {
  var handlePress = function (id, _, param) {
    console.log("clicked!!");
    return /* Update */Block.__(0, [/* record */[
                /* screen : Task */Block.__(0, [id]),
                /* tasks */param[/* state */3][/* tasks */1]
              ]]);
  };
  var renderRoute = function (self, state, update) {
    var match = state[/* screen */0];
    if (typeof match === "number") {
      if (match) {
        return Utils.str("Not here yet!");
      } else {
        var self$1 = self;
        return ReasonReact.element(/* None */0, /* None */0, TaskList.make(self$1[/* state */3][/* tasks */1], BubbleEvent.make(self$1[/* update */2], handlePress), /* array */[]));
      }
    } else if (match.tag) {
      return Utils.str("Not here yet!");
    } else {
      var id = match[0];
      var param = state;
      var update$1 = update;
      var match$1 = Task.getById(id)(param[/* tasks */1]);
      if (match$1) {
        return ReasonReact.element(/* None */0, /* None */0, TaskView.make(match$1[0], Curry._1(update$1, (function (param, param$1) {
                              var id$1 = id;
                              var param$2 = param$1;
                              return /* Update */Block.__(0, [/* record */[
                                          /* screen : EditTask */Block.__(1, [id$1]),
                                          /* tasks */param$2[/* state */3][/* tasks */1]
                                        ]]);
                            })), /* array */[]));
      } else {
        return Utils.str("Nothing here!");
      }
    }
  };
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (self) {
      return ReasonReact.element(/* None */0, /* None */0, Curry.app(ReactNative.View[/* make */0], [
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* Some */[StyleRe.style(/* :: */[
                              StyleRe.flex(1),
                              /* :: */[
                                StyleRe.justifyContent(/* center */98248149),
                                /* :: */[
                                  StyleRe.alignItems(/* center */98248149),
                                  /* [] */0
                                ]
                              ]
                            ])],
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* array */[renderRoute(self, self[/* state */3], self[/* update */2])]
                    ]));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* screen : Home */0,
              /* tasks : :: */[
                /* record */[
                  /* id */"blah",
                  /* title */"blah blah",
                  /* due */new Date(),
                  /* createdAt */new Date(),
                  /* updatedAt */new Date(),
                  /* points */5
                ],
                /* [] */0
              ]
            ];
    });
  return newrecord;
}

var $$default = ReasonReact.wrapReasonForJs(component, (function () {
        return make(/* () */0);
      }));

exports.component = component;
exports.make      = make;
exports.$$default = $$default;
exports.default   = $$default;
/* component Not a pure module */
